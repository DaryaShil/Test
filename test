package main

import "fmt"

impo
"fmt"
)

func main() {
	a := []int{5, 1, 2, 5}
	b := []int{4, 2, 5, 1, 1, 2}
	uniqueA := uniqueSlice(a)
	uniqueB := uniqueSlice(b)
	intersectionAB := intersection(a, b)
	fmt.Println("Unique elements in slice a:", uniqueA)
	fmt.Println("Unique elements in slice b:", uniqueB)
	fmt.Println("Intersection of a and b:", intersectionAB)
}
func uniqueSlice(input []int) []int {
	uniqueMap := make(map[int]struct{})
	for _, value := range input {
		uniqueMap[value] = struct{}{}
	}
	uniqueList := make([]int, 0, len(uniqueMap))
	for key := range uniqueMap {
		uniqueList = append(uniqueList, key)
	}
	return uniqueList
}
func intersection(sliceA, sliceB []int) []int {
	setB := make(map[int]struct{})
	for _, value := range sliceB {
		setB[value] = struct{}{}
	}
	intersectionList := make([]int, 0)
	for _, value := range sliceA {
		if _, exists := setB[value]; exists {
			intersectionList = append(intersectionList, value)
		}
	}
	return uniqueSlice(intersectionList)
}
